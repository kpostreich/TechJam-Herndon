{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ECCTY 2022 - Herndon October 25 - October 26 Herndon, Virginia Survey - Please provide your feedback! ECCTY 2022 Agenda This is a 2 day technical workshop. Refer to the daily labs pages from the left-navigation section. Agenda https://ibm.box.com/v/techjam-agenda-ppt Presentations http://TBD Hands on Activities From the navigation menu , select the Day 1 Labs and Day 2 Labs menu option. There, you will find the links to the hands-on lab guides and information to accces the Lab environments","title":"Home"},{"location":"#eccty-2022-herndon","text":"October 25 - October 26 Herndon, Virginia Survey - Please provide your feedback! ECCTY 2022 Agenda This is a 2 day technical workshop. Refer to the daily labs pages from the left-navigation section. Agenda https://ibm.box.com/v/techjam-agenda-ppt Presentations http://TBD Hands on Activities From the navigation menu , select the Day 1 Labs and Day 2 Labs menu option. There, you will find the links to the hands-on lab guides and information to accces the Lab environments","title":"ECCTY 2022 - Herndon"},{"location":"day1/","text":"Day 1: Application Platform Labs Time Session 2:15 PM - 5:30 PM Hands-on labs Liberty & App Mod Tools Labs Lab Environment: https://techzone.ibm.com/my/workshops/student/633c2fcb548a960019b11615 VM Password: websphere Liberty labs LAB 1156: Getting Started with Liberty and Dev Mode LAB 1157: Liberty developer experience with Liberty tools and VS Code App Modernization Tools labs LAB 1153: Transformation Advisor \u2013 data collection, assessment, and deployment accelerators LAB 1153-B: Transformation Advisor \u2013 Introduction to common code discovery LAB 1152: Getting Started with Mono2Micro \u2013 An AI Powered Java Monolith to Microservices Transformer IBM WebSphere Automation Labs Lab Environment: https://techzone.ibm.com/my/workshops/student/633c2e52d1a83300175ff9d8 VM Password: websphere LAB 1151: Proactive CVE protection for WebSphere with IBM WebSphere Automation OpenShift & Containers Labs Lab Environment: https://techzone.ibm.com/my/workshops/student/633c30e2d1a83300175ff9da VM Password: websphere LAB 1158-Part 1: Introduction to containerization LAB 1158-Part 2: Introduction to RedHat OpenShift","title":"Day 1 Labs"},{"location":"day1/#liberty-app-mod-tools-labs","text":"Lab Environment: https://techzone.ibm.com/my/workshops/student/633c2fcb548a960019b11615 VM Password: websphere Liberty labs LAB 1156: Getting Started with Liberty and Dev Mode LAB 1157: Liberty developer experience with Liberty tools and VS Code App Modernization Tools labs LAB 1153: Transformation Advisor \u2013 data collection, assessment, and deployment accelerators LAB 1153-B: Transformation Advisor \u2013 Introduction to common code discovery LAB 1152: Getting Started with Mono2Micro \u2013 An AI Powered Java Monolith to Microservices Transformer","title":"Liberty &amp; App Mod Tools Labs"},{"location":"day1/#ibm-websphere-automation-labs","text":"Lab Environment: https://techzone.ibm.com/my/workshops/student/633c2e52d1a83300175ff9d8 VM Password: websphere LAB 1151: Proactive CVE protection for WebSphere with IBM WebSphere Automation","title":"IBM WebSphere Automation Labs"},{"location":"day1/#openshift-containers-labs","text":"Lab Environment: https://techzone.ibm.com/my/workshops/student/633c30e2d1a83300175ff9da VM Password: websphere LAB 1158-Part 1: Introduction to containerization LAB 1158-Part 2: Introduction to RedHat OpenShift","title":"OpenShift &amp; Containers Labs"},{"location":"day2/","text":"Day 2: MQ Labs Time Session 2:15 PM - 5:30 PM Hands-on labs MQ Labs: https://jjodl.github.io/cp4i-pot-public/MQ-labs/","title":"Day 2 Labs"},{"location":"lab-env/","text":"Day 1: Accessing lab environment Go to the Attendee Lab URL from the Day 1 Labs menu item, From the Day 1 Labs menu item, select the Lab Environment URL for the specific lab(s) you want to run Enter the workshop password: websphere and click Submit button Click the URL to your environment and enter the password that is displayed on the page, which is unique to your environment. The VMs will be shown, and should already be STARTED DO NOT start / stop VMs unless instructed to do so! You will see a screen with one or more VMs, depending on the specific lab. Follow the lab guide for instructions for accessing the specific VM, credentials, etc. Note: The lab guides include the information for which VM to open, how to login to the VM, login credentials, etc. Liberty lab fix for pom.xml file Replace the contents of pom.xml file in the following directory, with this new content. /home/ibmdemo/Student/labs/devmode/demo-project and /home/ibmdemo/Student/labs/devmode/guide-getting-started <?xml version='1.0' encoding='utf-8'?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>io.openliberty.guides</groupId> <artifactId>guide-getting-started</artifactId> <version>1.0-SNAPSHOT</version> <packaging>war</packaging> <properties> <maven.compiler.source>1.8</maven.compiler.source> <maven.compiler.target>1.8</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <!-- Liberty configuration --> <liberty.var.default.http.port>9080</liberty.var.default.http.port> <liberty.var.default.https.port>9443</liberty.var.default.https.port> </properties> <dependencies> <!-- Provided dependencies --> <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> <version>8.0.0</version> <scope>provided</scope> </dependency> <dependency> <groupId>org.eclipse.microprofile</groupId> <artifactId>microprofile</artifactId> <version>3.3</version> <type>pom</type> <scope>provided</scope> </dependency> <!-- For tests --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter</artifactId> <version>5.6.2</version> <scope>test</scope> </dependency> <dependency> <groupId>org.apache.cxf</groupId> <artifactId>cxf-rt-rs-client</artifactId> <version>3.3.6</version> <scope>test</scope> </dependency> <dependency> <groupId>org.apache.cxf</groupId> <artifactId>cxf-rt-rs-extension-providers</artifactId> <version>3.3.6</version> <scope>test</scope> </dependency> <dependency> <groupId>org.glassfish</groupId> <artifactId>javax.json</artifactId> <version>1.1.4</version> <scope>test</scope> </dependency> </dependencies> <build> <finalName>${project.artifactId}</finalName> <plugins> <!-- Enable liberty-maven plugin --> <plugin> <groupId>io.openliberty.tools</groupId> <artifactId>liberty-maven-plugin</artifactId> <version>3.3.4</version> <configuration> <assemblyArtifact> <groupId>io.openliberty</groupId> <artifactId>openliberty-javaee8</artifactId> <version>21.0.0.3</version> <type>zip</type> </assemblyArtifact> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> <version>3.2.3</version> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> </plugin> <!-- Plugin to run functional tests --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> <version>2.22.2</version> <configuration> <systemPropertyVariables> <http.port>${liberty.var.default.http.port}</http.port> </systemPropertyVariables> </configuration> </plugin> </plugins> </build> </project>","title":"Accessing lab environments Day 1"},{"location":"lab-env/#liberty-lab-fix-for-pomxml-file","text":"Replace the contents of pom.xml file in the following directory, with this new content. /home/ibmdemo/Student/labs/devmode/demo-project and /home/ibmdemo/Student/labs/devmode/guide-getting-started <?xml version='1.0' encoding='utf-8'?> <project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\"> <modelVersion>4.0.0</modelVersion> <groupId>io.openliberty.guides</groupId> <artifactId>guide-getting-started</artifactId> <version>1.0-SNAPSHOT</version> <packaging>war</packaging> <properties> <maven.compiler.source>1.8</maven.compiler.source> <maven.compiler.target>1.8</maven.compiler.target> <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> <!-- Liberty configuration --> <liberty.var.default.http.port>9080</liberty.var.default.http.port> <liberty.var.default.https.port>9443</liberty.var.default.https.port> </properties> <dependencies> <!-- Provided dependencies --> <dependency> <groupId>jakarta.platform</groupId> <artifactId>jakarta.jakartaee-api</artifactId> <version>8.0.0</version> <scope>provided</scope> </dependency> <dependency> <groupId>org.eclipse.microprofile</groupId> <artifactId>microprofile</artifactId> <version>3.3</version> <type>pom</type> <scope>provided</scope> </dependency> <!-- For tests --> <dependency> <groupId>org.junit.jupiter</groupId> <artifactId>junit-jupiter</artifactId> <version>5.6.2</version> <scope>test</scope> </dependency> <dependency> <groupId>org.apache.cxf</groupId> <artifactId>cxf-rt-rs-client</artifactId> <version>3.3.6</version> <scope>test</scope> </dependency> <dependency> <groupId>org.apache.cxf</groupId> <artifactId>cxf-rt-rs-extension-providers</artifactId> <version>3.3.6</version> <scope>test</scope> </dependency> <dependency> <groupId>org.glassfish</groupId> <artifactId>javax.json</artifactId> <version>1.1.4</version> <scope>test</scope> </dependency> </dependencies> <build> <finalName>${project.artifactId}</finalName> <plugins> <!-- Enable liberty-maven plugin --> <plugin> <groupId>io.openliberty.tools</groupId> <artifactId>liberty-maven-plugin</artifactId> <version>3.3.4</version> <configuration> <assemblyArtifact> <groupId>io.openliberty</groupId> <artifactId>openliberty-javaee8</artifactId> <version>21.0.0.3</version> <type>zip</type> </assemblyArtifact> </configuration> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-war-plugin</artifactId> <version>3.2.3</version> </plugin> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> </plugin> <!-- Plugin to run functional tests --> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> <version>2.22.2</version> <configuration> <systemPropertyVariables> <http.port>${liberty.var.default.http.port}</http.port> </systemPropertyVariables> </configuration> </plugin> </plugins> </build> </project>","title":"Liberty lab fix for pom.xml file"}]}